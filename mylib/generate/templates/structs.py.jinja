from dataclasses import dataclass, field, fields
from ..clib import _clib

class Common:
    
    def __new__(cls, *args, **kwargs):
        obj = getattr(_clib, cls.__name__)()

        for k, v in zip(fields(cls), args):
            setattr(obj, k.name, v)
            
        for k, v in kwargs.items():
            setattr(obj, k, v)
        return obj

{% for s in structs %}
@dataclass
class {{ s.name }}(Common): 
    {% for f in s.fields %}
    {{ f.name }}: '{{ f.type}}' = field(default=0)
    {% endfor %}
    {% if not s.fields %}
    ...
    {% endif %}
{% endfor %}
 
