#include <optix_types.h>
#include <torch/extension.h>
#include "c_ptr_types.h"

PYBIND11_MODULE(c_structs, m)
{
    {% for s in structs %}
    py::class_<{{s.name}}>(m, "{{s.name}}")
        .def(py::init<>())
        {% for f in s.fields %}
            .def_property(
            "{{f.name}}", 

            [](const {{s.name}} &self)
                { return {{c2py(f.type, 'self.'+f.name)}}; }, 

            []({{s.name}} &self, {{pytype(f.type)}} {{f.name}})
                { self.{{f.name}} = {{py2c(f.type, f.name)}}; }, 

            py::return_value_policy::reference_internal)

        {% endfor %}
        .def("to_ptr", []({{s.name}} &self) { return ptr_wrapper<{{s.name}}>(&self);}, py::return_value_policy::take_ownership)
        ;
    {% endfor %}
}
